{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAgB,SAAS,gBAAgB,CAAC,qB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAK1C,EAAQ,AAJK,EAAU,GAAG,CAC9B,SAAC,CADH,EACe,MAAA,CAAC,EAAQ,WAAW,CAAC,IAAI,GAAG,OAAO,CAAC,KAAM,G,GAGhC,MAAM,CAC7B,SAAC,CAAA,CAAY,CADf,EACgC,OAAA,EAAa,CAC3C,EAAA,GAGI,EAAU,EAAQ,EAAU,MAAM,CAExC,SACG,aAAa,CAAC,qBACd,WAAW,CAAC,EAAM,cAAc,CAAC,UAEpC,SACG,aAAa,CAAC,uBACd,WAAW,CAAC,EAAQ,cAAc,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar countries = _to_consumable_array(document.querySelectorAll(\"span.population\"));\nvar population = countries.map(function(country) {\n    return +country.textContent.trim().replace(/,/g, \"\");\n});\nvar total = population.reduce(function(acumulator, currentValue) {\n    return acumulator + currentValue;\n}, 0);\nvar avarage = total / countries.length;\ndocument.querySelector(\".total-population\").replaceWith(total.toLocaleString(\"en-US\"));\ndocument.querySelector(\".average-population\").replaceWith(avarage.toLocaleString(\"en-US\"));\n\n//# sourceMappingURL=index.54ce813e.js.map\n","'use strict';\n\nconst countries = [...document.querySelectorAll('span.population')];\nconst population = countries.map(\n  (country) => +country.textContent.trim().replace(/,/g, ''),\n);\n\nconst total = population.reduce(\n  (acumulator, currentValue) => acumulator + currentValue,\n  0,\n);\n\nconst avarage = total / countries.length;\n\ndocument\n  .querySelector('.total-population')\n  .replaceWith(total.toLocaleString('en-US'));\n\ndocument\n  .querySelector('.average-population')\n  .replaceWith(avarage.toLocaleString('en-US'));\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","countries","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","total","population","map","country","textContent","trim","replace","reduce","acumulator","currentValue","avarage","querySelector","replaceWith","toLocaleString"],"version":3,"file":"index.54ce813e.js.map"}